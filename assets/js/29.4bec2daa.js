(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{426:function(t,a,r){"use strict";r.r(a);var _=r(3),s=Object(_.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ios集成flutter调研"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ios集成flutter调研"}},[t._v("#")]),t._v(" iOS集成Flutter调研")]),t._v(" "),a("h2",{attrs:{id:"一、环境配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、环境配置"}},[t._v("#")]),t._v(" 一、环境配置")]),t._v(" "),a("h3",{attrs:{id:"_1、flutter环境安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、flutter环境安装"}},[t._v("#")]),t._v(" 1、Flutter环境安装")]),t._v(" "),a("ul",[a("li",[t._v("因安卓代码原因，有很多jar包和Flutter3.0以后得语法冲突，导致无法使用最新的Flutter语言开发，需要将Flutter的版本控制到Flutter3.0以下，和安卓环境一直的情况下，我们使用Flutter2.2的版本。")]),t._v(" "),a("li",[t._v("因为我的电脑已经安装了Flutter3.0，所以需要降级，先打开终端，具体降级方式如下：")])]),t._v(" "),a("h4",{attrs:{id:"_1、查看所有分支和当前分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、查看所有分支和当前分支"}},[t._v("#")]),t._v(" 1、查看所有分支和当前分支")]),t._v(" "),a("blockquote",[a("p",[t._v("flutter channel")])]),t._v(" "),a("h4",{attrs:{id:"_2、切换到指定分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、切换到指定分支"}},[t._v("#")]),t._v(" 2、切换到指定分支")]),t._v(" "),a("blockquote",[a("p",[t._v("flutter channel stable")])]),t._v(" "),a("h4",{attrs:{id:"_3、降级到指定版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、降级到指定版本"}},[t._v("#")]),t._v(" 3、降级到指定版本")]),t._v(" "),a("blockquote",[a("p",[t._v("flutter downgrade v2.2.0")])]),t._v(" "),a("h4",{attrs:{id:"_4、检查flutter环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、检查flutter环境"}},[t._v("#")]),t._v(" 4、检查Flutter环境")]),t._v(" "),a("blockquote",[a("p",[t._v("flutter doctor")])]),t._v(" "),a("ul",[a("li",[t._v("如下图所示，则表示Flutter环境已经配置完成：")]),t._v(" "),a("li",[a("img",{attrs:{src:"https://static.aistarfish.com/front-release/file/F2023091023274128400002467.1.png",alt:"1.png"}})])]),t._v(" "),a("h3",{attrs:{id:"_2、dart安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、dart安装"}},[t._v("#")]),t._v(" 2、Dart安装")]),t._v(" "),a("p",[t._v("同样的原因，因为Flutter环境需要想配套的语言开发，所以我们需要同样对Dart切换到想匹配的版本，这里我是直接修改了Flutter代码中的"),a("code",[t._v("pubspec")]),t._v("文件中的相关配置：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("sdks:\n dart: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('">=2.12.0 <3.0.0"')]),t._v("\n")])])]),a("ul",[a("li",[a("img",{attrs:{src:"https://static.aistarfish.com/front-release/file/F2023091023302207200008912.2.png",alt:"2.png"}})])]),t._v(" "),a("p",[t._v("然后在终端中执行:")]),t._v(" "),a("blockquote",[a("p",[t._v("flutter packages get")])]),t._v(" "),a("p",[t._v("等待执行完毕，则表示当前dart版本切换完成。")]),t._v(" "),a("h3",{attrs:{id:"_3、xcode安装和配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、xcode安装和配置"}},[t._v("#")]),t._v(" 3、XCode安装和配置")]),t._v(" "),a("p",[t._v("要为iOS开发Flutter应用程序，需要Xcode 9.0或更高版本，因为iOS有一些新特性需要兼容，所以一般我们都是使用最新的XCode版本，安装较为简单，我们打开mac的应用商店，搜索XCode即可。")]),t._v(" "),a("ul",[a("li",[a("p",[a("img",{attrs:{src:"https://static.aistarfish.com/front-release/file/F2023091023302248700003842.3.png",alt:"3.png"}})])]),t._v(" "),a("li",[a("p",[t._v("等待XCode安装完成之后，我们需要设置开发者账号或者开发证书，否则是无法真机调试的，具体步骤为：")])]),t._v(" "),a("li",[a("p",[t._v("打开"),a("code",[t._v("XCode -> XCode选项下Settings -> Accounts ->添加开发者账号")])])]),t._v(" "),a("li",[a("p",[t._v("完成之后如下：")])]),t._v(" "),a("li",[a("p",[a("img",{attrs:{src:"https://static.aistarfish.com/front-release/file/F2023091023302243400006228.4.png",alt:"image.png"}})])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Flutter")]),t._v("和"),a("code",[t._v("iOS")]),t._v("的混合开发是不支持"),a("code",[t._v("BitCode")]),t._v("的，所以我们需要把它设置为"),a("code",[t._v("NO")])])]),t._v(" "),a("li",[a("p",[a("img",{attrs:{src:"https://static.aistarfish.com/front-release/file/F2023091023302215900000134.5.png",alt:"image.png"}})])])]),t._v(" "),a("h3",{attrs:{id:"_4、cocoapods安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、cocoapods安装"}},[t._v("#")]),t._v(" 4、Cocoapods安装")]),t._v(" "),a("p",[t._v("目前iOS开发中主流的第三方管理的工具就是"),a("code",[t._v("cocoapods")]),t._v("，"),a("code",[t._v("Flutter")]),t._v("官方也是推荐此方法来管理，相比于手动集成，他们更加便捷，我们只需要使用简单的脚本语言就能把最新的代码集成进来。具体的集成方式如下：")]),t._v(" "),a("h4",{attrs:{id:"_1、安装ruby环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、安装ruby环境"}},[t._v("#")]),t._v(" 1、安装ruby环境")]),t._v(" "),a("p",[t._v("mac下是自带ruby环境的，这个我们不需要再关心，如果当前Flutter语法和默认的ruby冲突，我们就需要安装所需的版本，这里因为项目重构和组件化的原因，我们用了一些新的脚本配置，这里ruby环境要安装两个版本，ruby-2.6.3和ruby-3.0.0，相关安装和版本切换如下：")]),t._v(" "),a("h5",{attrs:{id:"_1、查看当前的ruby版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、查看当前的ruby版本"}},[t._v("#")]),t._v(" 1、查看当前的ruby版本")]),t._v(" "),a("blockquote",[a("p",[t._v("rvm list")])]),t._v(" "),a("h5",{attrs:{id:"_2、查看可安装的ruby版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、查看可安装的ruby版本"}},[t._v("#")]),t._v(" 2、查看可安装的ruby版本")]),t._v(" "),a("blockquote",[a("p",[t._v("rvm list known")])]),t._v(" "),a("h5",{attrs:{id:"_3、安装想要的ruby版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、安装想要的ruby版本"}},[t._v("#")]),t._v(" 3、安装想要的ruby版本")]),t._v(" "),a("blockquote",[a("p",[t._v("rvm install 3.0.0\nrvm install 2.6.3")])]),t._v(" "),a("h5",{attrs:{id:"_4、切换ruby默认版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、切换ruby默认版本"}},[t._v("#")]),t._v(" 4、切换ruby默认版本")]),t._v(" "),a("blockquote",[a("p",[t._v("rvm use ruby-3.0.0 --default")])]),t._v(" "),a("p",[t._v("当然如果我们本地有其他的工具需要特定的ruby环境才能跑的话，我们只需要通过第四步切换到对应的环境即可。")]),t._v(" "),a("h4",{attrs:{id:"_2、删除自带的ruby镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、删除自带的ruby镜像"}},[t._v("#")]),t._v(" 2、删除自带的ruby镜像")]),t._v(" "),a("p",[t._v("在终端输入：")]),t._v(" "),a("blockquote",[a("p",[t._v("gem sources --remove https://rubygems.org/")])]),t._v(" "),a("h4",{attrs:{id:"_3、添加新镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、添加新镜像"}},[t._v("#")]),t._v(" 3、添加新镜像")]),t._v(" "),a("p",[t._v("在终端输入：")]),t._v(" "),a("blockquote",[a("p",[t._v("gem source --add https://gems.ruby-china.com/")])]),t._v(" "),a("p",[t._v("添加完成之后，确保只有一个镜像是我们所需的，在终端输入：")]),t._v(" "),a("blockquote",[a("p",[t._v("gem sources -l")])]),t._v(" "),a("h4",{attrs:{id:"_4、更新ruby"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、更新ruby"}},[t._v("#")]),t._v(" 4、更新ruby")]),t._v(" "),a("p",[t._v("在终端输入：")]),t._v(" "),a("blockquote",[a("p",[t._v("sudo gem update --system")])]),t._v(" "),a("h4",{attrs:{id:"_5、安装cocoapods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、安装cocoapods"}},[t._v("#")]),t._v(" 5、安装cocoapods")]),t._v(" "),a("p",[t._v("在终端输入：")]),t._v(" "),a("blockquote",[a("p",[t._v("sudo gem install -n /usr/local/bin cocoapods")])]),t._v(" "),a("h4",{attrs:{id:"_6、查询cocoapods是否安装成功"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、查询cocoapods是否安装成功"}},[t._v("#")]),t._v(" 6、查询cocoapods是否安装成功")]),t._v(" "),a("p",[t._v("在终端输入：")]),t._v(" "),a("blockquote",[a("p",[t._v("pod --version")])]),t._v(" "),a("h4",{attrs:{id:"_7、安装pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、安装pod"}},[t._v("#")]),t._v(" 7、安装pod")]),t._v(" "),a("p",[t._v("在终端输入：")]),t._v(" "),a("blockquote",[a("p",[t._v("pod setup")])]),t._v(" "),a("h2",{attrs:{id:"二、flutter代码开发和配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、flutter代码开发和配置"}},[t._v("#")]),t._v(" 二、Flutter代码开发和配置")]),t._v(" "),a("ul",[a("li",[t._v("在集成之前，我们需要先把"),a("code",[t._v("Flutter")]),t._v("代码跑通，否则是无法进行下去的，需要先检查我们check下来的代码是否完整，文件夹中必须要有"),a("code",[t._v("pubspec.yaml")]),t._v("文件，否则无法生成相对应的ios文件夹，如果没有发现iOS文件夹，则需要先运行一下相应指令。")]),t._v(" "),a("li",[a("img",{attrs:{src:"https://static.aistarfish.com/front-release/file/F2023091023302213600007444.6.png",alt:"image.png"}})]),t._v(" "),a("li",[t._v("在VSCode终端执行：")])]),t._v(" "),a("blockquote",[a("p",[t._v("flutter pub get")])]),t._v(" "),a("p",[t._v("如果我们需要开发新的页面，这个时候就可以进行了。")]),t._v(" "),a("h3",{attrs:{id:"_1、真机调试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、真机调试"}},[t._v("#")]),t._v(" 1、真机调试")]),t._v(" "),a("ul",[a("li",[t._v("如果需要真机调试，我们需要进一步在XCode中配置相关证书。在iOS开发中，真机调试的情况下是需要开发者账号的，否则生成的相关证书有效期是只有7天，过了7天就无法再次使用了，默认情况下我们使用自动证书管理会简单一点。")]),t._v(" "),a("li",[t._v("我们打开"),a("code",[t._v(".ios")]),t._v("文件夹，然后双击"),a("code",[t._v("Runner.xcworkspace")]),t._v("文件，就会使用XCode打开相应工程")]),t._v(" "),a("li",[a("img",{attrs:{src:"https://static.aistarfish.com/front-release/file/F2023091023302208500005728.7.png",alt:"image.png"}})]),t._v(" "),a("li",[t._v("接下来找到相应位置配置开发者账号，账号配置如下：")]),t._v(" "),a("li",[a("img",{attrs:{src:"https://static.aistarfish.com/front-release/file/F2023091023302214500002792.8.png",alt:"image.png"}})]),t._v(" "),a("li",[t._v("配置完成之后选择好要运行的设备，然后点击run按钮就可以检查代码时候正常运行了。")]),t._v(" "),a("li",[t._v("如果可以正常运行，则一般情况下就没有问题了，就可以进行集成了。")])]),t._v(" "),a("h3",{attrs:{id:"_2、通过cocoapods把代码集成到项目中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、通过cocoapods把代码集成到项目中"}},[t._v("#")]),t._v(" 2、通过cocoapods把代码集成到项目中")]),t._v(" "),a("h4",{attrs:{id:"_1、项目文件夹配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、项目文件夹配置"}},[t._v("#")]),t._v(" 1、项目文件夹配置")]),t._v(" "),a("ul",[a("li",[t._v("这里我们需要先把"),a("code",[t._v("Flutter")]),t._v("文件夹和"),a("code",[t._v("iOS")]),t._v("项目的根目录文件夹放到同一层级")]),t._v(" "),a("li",[a("img",{attrs:{src:"https://static.aistarfish.com/front-release/file/F2023091023434714000009355.10.png",alt:"10.png"}})])]),t._v(" "),a("h4",{attrs:{id:"_2、编辑podfile文件夹"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、编辑podfile文件夹"}},[t._v("#")]),t._v(" 2、编辑Podfile文件夹")]),t._v(" "),a("ul",[a("li",[t._v("这个文件夹是iOS项目工程所有的第三方库的配置文件，基本控制所有的第三方版本的管理，这里我们需要把"),a("code",[t._v("Flutter")]),t._v("项目的代码和依赖库添加进来，当然添加方式有很多种，但是"),a("code",[t._v("Flutter1.0")]),t._v("和"),a("code",[t._v("Flutter2.0")]),t._v("和"),a("code",[t._v("Flutter3.0")]),t._v("的集成方式都是有所区别，这点"),a("code",[t._v("Flutter")]),t._v("的官方文档有提到，下面是"),a("code",[t._v("Flutter2.0")]),t._v("版本的配置方式：")]),t._v(" "),a("li",[a("img",{attrs:{src:"https://static.aistarfish.com/front-release/file/F2023091023434710300001762.11.png",alt:"image.png"}})]),t._v(" "),a("li",[t._v("这里是设置路径和需要引入的项目名称。然后在target下添加集成")]),t._v(" "),a("li",[a("img",{attrs:{src:"https://static.aistarfish.com/front-release/file/F2023091023434712100000220.12.png",alt:"image.png"}})])]),t._v(" "),a("h4",{attrs:{id:"_3、集成flutter代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、集成flutter代码"}},[t._v("#")]),t._v(" 3、集成Flutter代码")]),t._v(" "),a("ul",[a("li",[t._v("打开终端，cd到"),a("code",[t._v("iOS")]),t._v("项目中，然后运行：")])]),t._v(" "),a("blockquote",[a("p",[t._v("pod install")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("注意："),a("code",[t._v("iOS")]),t._v("项目中，我们使用了很多新的脚本语言，如果"),a("code",[t._v("pod install")]),t._v("执行失败，这里我们需要把"),a("code",[t._v("ruby")]),t._v("环境先切换到"),a("code",[t._v("3.0.0")]),t._v("版本，然后再执行"),a("code",[t._v("pod install")]),t._v("，执行结束之后再切换到"),a("code",[t._v("2.6.3")])])]),t._v(" "),a("li",[a("p",[t._v("顺利的话这个时候代码就已经集成进来了，这个时候再打开"),a("code",[t._v("iOS")]),t._v("项目就会发现多了3个库，分别是：")])]),t._v(" "),a("li",[a("p",[a("img",{attrs:{src:"https://static.aistarfish.com/front-release/file/F2023091023434712100000156.13.png",alt:"image.png"}})])])]),t._v(" "),a("p",[t._v("下面，按照上面的真机调试，运行一下，如果正常运行则说明集成已经完成了。")]),t._v(" "),a("p",[t._v("注意：集成部分踩了一些坑，配置方面已经写了一些，按照上面的步骤来基本是可以避免的，如果最后跑不起来，而且XCode也没有具体报错，基本上都是一些环境配置版本冲突造成的。重新检查一下配置环境的版本即可。")]),t._v(" "),a("h3",{attrs:{id:"_3、ios代码集成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、ios代码集成"}},[t._v("#")]),t._v(" 3、iOS代码集成")]),t._v(" "),a("ul",[a("li",[t._v("集成时遇到了一个很大的问题，就是相关代码已经集成完成，真机运行也没有报错，但是跳转的时候就是打不开相应的界面，但是如果我新创建一个工程，按照上面的方式集成进来就是可以的，这个问题困扰了我很久，网上搜了很多也没有找到问题，最后才发现是组件化的原因，然后是通过创建一个"),a("code",[t._v("Flutter")]),t._v("组件的方式才正常运行。")]),t._v(" "),a("li",[a("img",{attrs:{src:"https://static.aistarfish.com/front-release/file/F2023091023474183500003423.14.png",alt:"image.png"}})])]),t._v(" "),a("p",[t._v("数据交互方面准备使用"),a("code",[t._v("FlutterMessage")]),t._v("来进行，相关代码需要调试的具体调整和补充，待续...")])])}),[],!1,null,null,null);a.default=s.exports}}]);