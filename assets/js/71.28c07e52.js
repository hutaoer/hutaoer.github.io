(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{503:function(a,s,t){"use strict";t.r(s);var e=t(2),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[a._v("#")]),a._v(" 背景")]),a._v(" "),s("p",[a._v("docker比虚拟机更加的轻量化，很适合在服务器或本地部署服务，且不会对其他应用造成影响。毕竟典型的应用，不如一个php的应用，要么使用LAMP，要么使用LNMP。如果是在云服务器上部署一个php环境，需要手动安装nginx 或 apache ，还有 mysql，毕竟繁琐，而使用社区已经打包好的镜像，通过docker部署，相对简单。")]),a._v(" "),s("h1",{attrs:{id:"使用docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用docker"}},[a._v("#")]),a._v(" 使用docker")]),a._v(" "),s("h2",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),s("h3",{attrs:{id:"linux-centos7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-centos7"}},[a._v("#")]),a._v(" Linux centos7")]),a._v(" "),s("p",[a._v("通过yum安装")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("yum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("  \n")])])]),s("p",[a._v("启动docker")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" start\n")])])]),s("h3",{attrs:{id:"macos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#macos"}},[a._v("#")]),a._v(" MacOS")]),a._v(" "),s("p",[a._v("直接下载对应的安装包，"),s("a",{attrs:{href:"https://docs.docker.com/desktop/mac/install/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://docs.docker.com/desktop/mac/install/"),s("OutboundLink")],1),a._v(" "),s("br"),a._v("安装完成后，启动docker应用。")]),a._v(" "),s("h2",{attrs:{id:"下载镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下载镜像"}},[a._v("#")]),a._v(" 下载镜像")]),a._v(" "),s("p",[a._v("比如，我们下载一个XAMPP的镜像，自带apache，mysql和phpMyAdmin。现在有三个版本，分别支持不容的php版本：")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[a._v("PHP version")])]),a._v(" "),s("th",[s("strong",[a._v("Corresponding tag")])])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("8.0.2")]),a._v(" "),s("td",[a._v("tomsik68/xampp:8")])]),a._v(" "),s("tr",[s("td",[a._v("7.3.7")]),a._v(" "),s("td",[a._v("tomsik68/xampp:7")])]),a._v(" "),s("tr",[s("td",[a._v("5.6.40")]),a._v(" "),s("td",[a._v("tomsik68/xampp:5")])])])]),a._v(" "),s("p",[a._v("我们选择常用的php 7，那么就下载的时候，带上版本号。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull tomsik68/xampp:7\n")])])]),s("p",[a._v("下载完成后，可以看到类似的结果信息。\n"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/hutaoer/images/1656250191279-d53d37ad-fe53-410f-8131-4a711d5e8634.png",alt:"image.png"}})]),a._v(" "),s("h2",{attrs:{id:"常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[a._v("#")]),a._v(" 常用命令")]),a._v(" "),s("h3",{attrs:{id:"镜像操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#镜像操作"}},[a._v("#")]),a._v(" 镜像操作")]),a._v(" "),s("h4",{attrs:{id:"docker-images-列出本地镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-images-列出本地镜像"}},[a._v("#")]),a._v(" docker images ，列出本地镜像")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/hutaoer/images/1656253066241-93c800d0-c932-4fc3-a8b4-08f6f118ad68.png",alt:"image.png"}})]),a._v(" "),s("ul",[s("li",[a._v("**REPOSITORY：**表示镜像的仓库源")]),a._v(" "),s("li",[a._v("**TAG：**镜像的标签，同一仓库源可以有多个 TAG，代表这个仓库源的不同个版本。")]),a._v(" "),s("li",[a._v("**IMAGE ID：**镜像ID")]),a._v(" "),s("li",[a._v("**CREATED：**镜像创建时间")]),a._v(" "),s("li",[a._v("**SIZE：**镜像大小")])]),a._v(" "),s("h4",{attrs:{id:"docker-run-镜像-以某个镜像启动容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-run-镜像-以某个镜像启动容器"}},[a._v("#")]),a._v(" docker run 镜像，以某个镜像启动容器")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" ubuntu:15.10 /bin/bash \n")])])]),s("p",[a._v("参数说明：")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("-i")]),a._v(": 交互式操作。")]),a._v(" "),s("li",[s("strong",[a._v("-t")]),a._v(": 终端。")]),a._v(" "),s("li",[s("strong",[a._v("ubuntu:15.10")]),a._v(": 这是指用 ubuntu 15.10 版本镜像为基础来启动容器。如果不指定一个镜像的版本标签，例如你只使用 ubuntu，docker 将默认使用 ubuntu:latest 镜像。")]),a._v(" "),s("li",[s("strong",[a._v("/bin/bash")]),a._v("：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 /bin/bash")])]),a._v(" "),s("h4",{attrs:{id:"docker-pull-镜像-拉取某个镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-pull-镜像-拉取某个镜像"}},[a._v("#")]),a._v(" docker pull 镜像，拉取某个镜像")]),a._v(" "),s("h4",{attrs:{id:"docker-rmi-镜像-删除某个镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-rmi-镜像-删除某个镜像"}},[a._v("#")]),a._v(" docker rmi 镜像，删除某个镜像")]),a._v(" "),s("h4",{attrs:{id:"docker-build-构建镜像-本次不会涉及到。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-build-构建镜像-本次不会涉及到。"}},[a._v("#")]),a._v(" docker build ，构建镜像，本次不会涉及到。")]),a._v(" "),s("h2",{attrs:{id:"启动容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动容器"}},[a._v("#")]),a._v(" 启动容器")]),a._v(" "),s("p",[a._v("容器是镜像的实例。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" myXampp "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("41061")]),a._v(":22 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("41062")]),a._v(":80 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /Users/hutaoer/Sites/test:/www tomsik68/xampp:7\n")])])]),s("p",[a._v("通过宿主机的/Users/hutaoer/Sites/test 目录挂载到容器的/www 目录，可通过以下方式指定。这样的话，访问容器的 /www 目录，就对应的会访问到宿主机的 /Users/hutaoer/Sites/test  目录。需要注意的是，这里的 /www 目录，是我们自己在启动容器的时候创建生成的，并不是XAMPP默认的html目录。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /Users/hutaoer/Sites/test:/www\n")])])]),s("p",[a._v("启动成功后，会生成一个容器id，通过 docker ps -a 可以查看活跃的容器。CONTAINER_ID 对应的就是容器id的hash缩写。docker ps 是查看所有运行的容器。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/hutaoer/images/1656250373961-35cc7b19-652c-4d51-b5de-bc739556529b.png",alt:"image.png"}}),s("br"),a._v("启动成功后，访问 ：http://localhost:41062（或者127.0.0.1, 或者局域网IP）")]),a._v(" "),s("ul",[s("li",[a._v("就可以访问到 XAMPP 的默认网页。\n"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/hutaoer/images/1656250462324-289216df-9184-41b5-9213-a209863313c0.png",alt:"image.png"}})])]),a._v(" "),s("h2",{attrs:{id:"访问容器终端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#访问容器终端"}},[a._v("#")]),a._v(" 访问容器终端")]),a._v(" "),s("h4",{attrs:{id:"有以下几种种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有以下几种种方式"}},[a._v("#")]),a._v(" 有以下几种种方式")]),a._v(" "),s("p",[a._v("方式一：MacOS中，可以通过GUI界面，点击对应容器的【CLI】按钮，会唤起一个宿主机的终端，直接进入。\n"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/hutaoer/images/1656252053589-4a059063-82e7-44c8-bc42-38a7647980bb.png",alt:"image.png"}}),a._v("\n方式二：在命令行中输入")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" attach container_id\n")])])]),s("p",[a._v("方式三：还是通过命令行输入")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" cd6ad6023 /bin/sh\n")])])]),s("p",[a._v("好了，掌握了如何进入容器的方式，我们就可以进入到容器进行相应的一些操作。\n通过查询"),s("code",[a._v("XAMPP")]),a._v("文档，我们知道了"),s("code",[a._v("XAMPP")]),a._v("的对应的配置目录为："),s("code",[a._v("/opt/lampp/etc/httpd.conf")]),a._v("  ， 找到 "),s("code",[a._v("DocumentRoot")]),a._v(" 对应的目录为："),s("code",[a._v("DocumentRoot")]),a._v(" "),s("code",[a._v('"/opt/lampp/htdocs"')]),a._v(" 。这时候，我们把目录修改为 "),s("code",[a._v("/www")]),a._v("。\n"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/hutaoer/images/1656251161114-bee2f4cf-0859-4412-bbab-e543070a7f8b.png",alt:"image.png"}})]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("DocumentRoot "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/www"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("Directory "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/www"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("p",[a._v("然后再重启XAMPP服务。"),s("br"),a._v("使用命令：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("/opt/lampp/lampp restart\n")])])]),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/hutaoer/images/1656251255550-48b6b714-9bb0-4fba-a685-80b82a93747e.png",alt:"image.png"}}),a._v("\n再把你想要部署的应用，比如 wordpress，解压后放到宿主机的目录下，我这里就是：/Users/hutaoer/Sites/test ，也就是我们把宿主机的目录挂载到了容器上。这样子，你就能通过docker的服务，访问到挂载目录中的应用咯。")]),a._v(" "),s("h2",{attrs:{id:"查看挂载目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看挂载目录"}},[a._v("#")]),a._v(" 查看挂载目录")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" inspect containerId "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" HostConfig "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-A")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),a._v("\n")])])]),s("h2",{attrs:{id:"宿主机往docker实例传输文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#宿主机往docker实例传输文件"}},[a._v("#")]),a._v(" 宿主机往docker实例传输文件")]),a._v(" "),s("p",[a._v("注意：这里的容器id需要写完整的id")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" php.tar 3ef75ddb2ce8cb29d71e479757ddc32fd797c96a7a4b2573b696ac7d44f21f31:/opt/lampp/htdocs\n")])])]),s("h1",{attrs:{id:"配置nginx代理docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置nginx代理docker"}},[a._v("#")]),a._v(" 配置nginx代理docker")]),a._v(" "),s("p",[a._v("很多情况下，我们服务器或者本机都是装有nginx的，可以利用nginx强大的能力，帮我们做代理。比如把docker容器中的服务，通过nginx代理，实现docker服务的访问。"),s("br"),a._v("比如，我宿主机中，已经启动了一个docker容器，对外暴露端口为 41062，那么我们宿主机的nginx可以配置如下：")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  server_name "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".0.101"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# or localhost")]),a._v("\n  \n  ssl_session_timeout  5m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  ssl_protocols  TLSv1 TLSv1.1 TLSv1.2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  ssl_ciphers  ECDHE-RSA-AES128-SHA:AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:DES-CBC3-SHA:ECDHE-RSA-AES256-SHA:AES256-SHA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  ssl_prefer_server_ciphers   on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  \n  location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    proxy_pass      http://127.0.0.1:41062"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 这里是关键")]),a._v("\n    proxy_set_header Host "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    proxy_set_header X-Real-IP "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$remote_addr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    proxy_set_header X-Forwarded-For "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$proxy_add_x_forwarded_for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    proxy_set_header X-Forwarded-Proto "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$scheme")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("然后，重启你的nginx服务，便可以通过 localhost 或者 ip 或者域名的方式，访问docker暴露的服务了。")]),a._v(" "),s("h3",{attrs:{id:"注意"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[a._v("#")]),a._v(" 注意")]),a._v(" "),s("p",[a._v("如果你使用的是云服务器，云平台可能会有一些安全措施，导致你docker暴露的端口无法访问。这时候，就需要在你的ECS实例上面，打开相应的端口才行。")])])}),[],!1,null,null,null);s.default=r.exports}}]);