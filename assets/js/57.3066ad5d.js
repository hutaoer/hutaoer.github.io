(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{422:function(t,e,a){"use strict";a.r(e);var r=a(45),u=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vuex-与-redux-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuex-与-redux-区别"}},[t._v("#")]),t._v(" Vuex 与 Redux 区别")]),t._v(" "),a("h2",{attrs:{id:"相同点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相同点"}},[t._v("#")]),t._v(" 相同点")]),t._v(" "),a("ul",[a("li",[t._v("全局数据共享")]),t._v(" "),a("li",[t._v("流程相同：")])]),t._v(" "),a("h2",{attrs:{id:"不同点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不同点"}},[t._v("#")]),t._v(" 不同点")]),t._v(" "),a("ul",[a("li",[t._v("Redux 使用的是不可变数据，而Vuex的数据是可变的。Redux每次都是用新的state替换旧的state，而Vuex是直接修改。")]),t._v(" "),a("li",[t._v("Redux 在检测数据变化的时候，是通过 diff 的方式比较差异的，而Vuex其实和Vue的原理一样，是通过 getter/setter来比较的。\n从表现层来说：\nvuex定义了state、getter、mutation、action四个对象；redux定义了state、reducer、action。\nvuex中state统一存放，方便理解；reduxstate依赖所有reducer的初始值\nvuex有getter,目的是快捷得到state；redux没有这层，react-redux mapStateToProps参数做了这个工作。\nvuex中mutation只是单纯赋值(很浅的一层)；redux中reducer只是单纯设置新state(很浅的一层)。他俩作用类似，但书写方式不同\nvuex中action有较为复杂的异步ajax请求；redux中action中可简单可复杂,简单就直接发送数据对象（{type:xxx, your-data}）,复杂需要调用异步ajax（依赖redux-thunk插件）。")]),t._v(" "),a("li",[t._v("vuex触发方式有两种commit同步和dispatch异步；redux同步和异步都使用dispatch")])])])}),[],!1,null,null,null);e.default=u.exports}}]);