(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{496:function(v,e,_){"use strict";_.r(e);var a=_(3),n=Object(a.a)({},(function(){var v=this,e=v._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"npm-学习笔记"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm-学习笔记"}},[v._v("#")]),v._v(" npm 学习笔记")]),v._v(" "),e("h2",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[v._v("#")]),v._v(" 安装")]),v._v(" "),e("ul",[e("li",[v._v("安装"),e("code",[v._v("Node.js")]),v._v("的时候，会连带一起安装"),e("code",[v._v("npm")])]),v._v(" "),e("li",[v._v("安装最新版"),e("code",[v._v("npm")]),v._v(": "),e("code",[v._v("npm install npm@latest -g")])])]),v._v(" "),e("h2",{attrs:{id:"npx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npx"}},[v._v("#")]),v._v(" npx")]),v._v(" "),e("ul",[e("li",[v._v("npm 从5.2版开始，增加了 npx 命令。npx 想要解决的主要问题，就是调用项目内部安装的模块。")]),v._v(" "),e("li",[v._v("对于一些全局安装的工具包，比如"),e("code",[v._v("create-react-app")]),v._v("，执行"),e("code",[v._v("npx create-react-app my-react-app")]),v._v("，那么npx执行的逻辑是：将"),e("code",[v._v("create-react-app")]),v._v("下载到临时目录，使用以后再删除；若后面再次执行这个命令，会重新下载"),e("code",[v._v("create-react-app")])])]),v._v(" "),e("h2",{attrs:{id:"全局链接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全局链接"}},[v._v("#")]),v._v(" 全局链接")]),v._v(" "),e("ul",[e("li",[v._v("查看所有全局链接："),e("code",[v._v("npm ls --global --depth 0")])]),v._v(" "),e("li",[v._v("删除某个全局链接："),e("code",[v._v("npm uninstall --global pkg")])])]),v._v(" "),e("h2",{attrs:{id:"npm-link"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm-link"}},[v._v("#")]),v._v(" npm link")]),v._v(" "),e("ul",[e("li",[v._v("在一个npm的项目中执行"),e("code",[v._v("npm link")]),v._v("会创建一个全局的"),e("code",[v._v("npm")]),v._v("链接，指向当前执行命令的目录。")]),v._v(" "),e("li",[v._v("链接的名字对应的是"),e("code",[v._v("package.json")]),v._v("中的"),e("code",[v._v("name")]),v._v("，比如叫做："),e("code",[v._v("pkgName")])]),v._v(" "),e("li",[v._v("记得给项目添加"),e("code",[v._v("main")]),v._v("属性，指定主入口。")]),v._v(" "),e("li",[v._v("如果要在其他的项目中使用这个全局链接，则在项目的根目录中执行,"),e("code",[v._v("npm link pkgName")]),v._v("。生成链接后，每次修改代码，都会同步。不需要再做二次链接。")]),v._v(" "),e("li",[v._v("如果测试完成后，务必记得删除"),e("code",[v._v("pkgName")]),v._v("，先在项目中删除模块，执行"),e("code",[v._v("npm unlink pkgName")])]),v._v(" "),e("li",[v._v("然后进入"),e("code",[v._v("pkgName")]),v._v("项目根目录，执行"),e("code",[v._v("npm unlink")])])]),v._v(" "),e("h3",{attrs:{id:"使用模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用模块"}},[v._v("#")]),v._v(" 使用模块")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("npm link pkgName")])]),v._v(" "),e("li",[v._v("如果"),e("code",[v._v("pkgName")]),v._v("中指定了"),e("code",[v._v('"main":"index.js"')]),v._v("属性，那么在"),e("code",[v._v("require")]),v._v("的时候，就会去查找"),e("code",[v._v("pkgName/index.js")])]),v._v(" "),e("li",[v._v("如果"),e("code",[v._v("pkgName")]),v._v("的"),e("code",[v._v("package.json")]),v._v("中还使用了"),e("code",[v._v("bin")]),v._v("属性，那么会在本地的"),e("code",[v._v("{prefix}/bin/")]),v._v("下面再建立一个软连接，这样就可以直接在命令行中使用"),e("code",[v._v("bin")]),v._v("配置的属性。")]),v._v(" "),e("li",[v._v("如果"),e("code",[v._v("bin")]),v._v("下面有多个命令，则会在"),e("code",[v._v("{prefix}/bin")]),v._v("下面，生成多个全局的软连接。")]),v._v(" "),e("li",[v._v("如果执行"),e("code",[v._v("bin")]),v._v("下面对应命令提示没有权限的话，需要将"),e("code",[v._v("npm")]),v._v("的"),e("code",[v._v("{prefix}/bin")]),v._v("路径，添加到"),e("code",[v._v("$PATH")]),v._v("中。")]),v._v(" "),e("li",[v._v("例如，你可以在"),e("code",[v._v(".zshrc")]),v._v("中，添加代码："),e("code",[v._v("export PATH={home}/.nvm/versions/node/v12.16.1/bin")]),v._v("。作者本人是使用的"),e("code",[v._v("nvm")]),v._v("管理"),e("code",[v._v("node")]),v._v("，所以"),e("code",[v._v("PATH")]),v._v("可能跟大家的不一样，仅供参考。")])]),v._v(" "),e("h3",{attrs:{id:"注意"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[v._v("#")]),v._v(" 注意")]),v._v(" "),e("ul",[e("li",[v._v("在"),e("code",[v._v("pkgName")]),v._v("项目中删除的时候，直接"),e("code",[v._v("npm unlink")]),v._v("会删除不掉，错误信息为："),e("code",[v._v("Must provide a package name to remove")]),v._v("。然后又执行"),e("code",[v._v("npm unlink pkgName")]),v._v("，还是删除不掉。后来使用了"),e("code",[v._v("npm unlink pkgName -g")]),v._v("才能删除成功。不知道是不是使用了"),e("code",[v._v("nvm")]),v._v("的关系。如果是使用原生的"),e("code",[v._v("node")]),v._v("安装包安装，可能会不一样。笔者在这里没有做进一步的测试。")]),v._v(" "),e("li",[v._v("测试的"),e("code",[v._v("npm")]),v._v("版本为 "),e("code",[v._v("7.22.0")]),v._v("，这时候，"),e("code",[v._v("{prefix}/lib/node_modules")]),v._v("和"),e("code",[v._v("{prefix}/bin/")]),v._v("下面的软连接都会一起删除掉。")]),v._v(" "),e("li",[v._v("也可以进入到目录下，手动删除："),e("code",[v._v("rm linkName")])])]),v._v(" "),e("h2",{attrs:{id:"npm-ci"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm-ci"}},[v._v("#")]),v._v(" npm ci")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("npm ci")]),v._v(" 基于一个独立的库 "),e("code",[v._v("libcipm")]),v._v(" 安装依赖，功能类似"),e("code",[v._v("npm install")]),v._v("。当它安装依赖时，默认是缓存优先的，从而加速装包。")]),v._v(" "),e("li",[v._v("使用限制：\n"),e("ul",[e("li",[v._v("必须包含"),e("code",[v._v("package-lock.json")])]),v._v(" "),e("li",[v._v("npm 版本 "),e("code",[v._v(">=5.7")])])])])]),v._v(" "),e("h2",{attrs:{id:"npm-install"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm-install"}},[v._v("#")]),v._v(" npm install")]),v._v(" "),e("ul",[e("li",[v._v("在项目中执行"),e("code",[v._v("npm install pkgName")]),v._v(", "),e("code",[v._v("pkgName")]),v._v("被安装到当前目录的"),e("code",[v._v("node_modules")]),v._v("子目录；其次，"),e("code",[v._v("node_modules/.bin")]),v._v("目录会生成一个符号链接"),e("code",[v._v("node_modules/.bin/pkgName")]),v._v("，指向"),e("code",[v._v("pkgName")]),v._v("模块的可执行脚本。")]),v._v(" "),e("li",[v._v("安装成功后，就可以在"),e("code",[v._v("package.json")]),v._v("的"),e("code",[v._v("script")]),v._v("属性里面，不带路径的引用"),e("code",[v._v("pkgName")]),v._v("这个脚本。")])]),v._v(" "),e("h3",{attrs:{id:"peerdependency"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#peerdependency"}},[v._v("#")]),v._v(" peerDependency")]),v._v(" "),e("ul",[e("li",[v._v("可以用来避免核心依赖库被重复下载的问题。提示宿主环境去安装满足插件"),e("code",[v._v("peerDependencies")]),v._v("所指定依赖的包。")]),v._v(" "),e("li",[v._v("比如"),e("code",[v._v("antd")]),v._v("就指定了"),e("code",[v._v("peerDependencies")])])]),v._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[v._v("  "),e("span",{pre:!0,attrs:{class:"token string-property property"}},[v._v('"peerDependencies"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n    "),e("span",{pre:!0,attrs:{class:"token string-property property"}},[v._v('"react"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[v._v('">=16.9.0"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v("\n    "),e("span",{pre:!0,attrs:{class:"token string-property property"}},[v._v('"react-dom"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[v._v('">=16.9.0"')]),v._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n")])])]),e("ul",[e("li",[v._v("我在自己的本地项目中显式的安装依赖"),e("code",[v._v('"react": "^17.0.2"')]),v._v("，然后再安装"),e("code",[v._v("antd")])]),v._v(" "),e("li",[v._v("最终在本地项目的"),e("code",[v._v("node_modules")]),v._v('下，安装了"react": "17.0.2"'),e("code",[v._v('和"react-dom": "17.0.2"')])]),v._v(" "),e("li",[v._v("删除"),e("code",[v._v("node_modules")]),v._v("和"),e("code",[v._v("package-lock.json")]),v._v("，先安装"),e("code",[v._v("react@16.0.0")]),v._v("，再安装"),e("code",[v._v("antd")]),v._v("，会提示"),e("code",[v._v("unable to resolve dependency tree")])]),v._v(" "),e("li",[v._v("另外，如果先安装antd，再安装低版本的react，也会提示相应的报错。")])]),v._v(" "),e("h2",{attrs:{id:"同yarn比较"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#同yarn比较"}},[v._v("#")]),v._v(" 同yarn比较")]),v._v(" "),e("h3",{attrs:{id:"yarn"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yarn"}},[v._v("#")]),v._v(" yarn")]),v._v(" "),e("ul",[e("li",[v._v("并行安装。二次安装，直接从缓存中读取。速度更快。")]),v._v(" "),e("li",[v._v("安装版本统一：生成"),e("code",[v._v("yarn.lock")]),v._v("文件")]),v._v(" "),e("li",[v._v("yarn依赖结构是扁平化的。")]),v._v(" "),e("li",[v._v("命令："),e("code",[v._v("add, remove")])]),v._v(" "),e("li",[v._v("日志输出更加简洁，仅展示必要的信息。")])]),v._v(" "),e("h3",{attrs:{id:"npm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm"}},[v._v("#")]),v._v(" npm")]),v._v(" "),e("ul",[e("li",[v._v("按照队列进行安装，类似串行安装。")]),v._v(" "),e("li",[v._v("5.0版本，默认新增了类似yarn.lock的 package-lock.json")]),v._v(" "),e("li",[v._v("npm2之前是树形的，npm3以上是扁平化的。")]),v._v(" "),e("li",[v._v("命令："),e("code",[v._v("install uninstall")]),v._v("，安装的时候打印安装依赖。")])])])}),[],!1,null,null,null);e.default=n.exports}}]);